Given an array of words and a length L, format the text such that each line has exactly L characters and is fully (left and right) justified.

def full_justify(words, L):
    def justify_line(line_words, length):
        if len(line_words) == 1:
            return line_words[0] + ' ' * (length - len(line_words[0]))

        total_chars = sum(len(word) for word in line_words)
        total_spaces = length - total_chars
        spaces_between_words = total_spaces // (len(line_words) - 1)
        extra_spaces = total_spaces % (len(line_words) - 1)

        line = ''
        for i in range(len(line_words) - 1):
            line += line_words[i] + ' ' * (spaces_between_words + (1 if i < extra_spaces else 0))
        line += line_words[-1]  # Add the last word without extra spaces

        return line

    result = []
    current_line = []

    for word in words:
        if sum(len(w) for w in current_line) + len(word) + len(current_line) > L:
            result.append(justify_line(current_line, L))
            current_line = []
        current_line.append(word)

    # Add the last line (left-justified)
    if current_line:
        last_line = ' '.join(current_line)
        result.append(last_line + ' ' * (L - len(last_line)))

    return result

# Example usage:
words = ["This", "is", "an", "example", "of", "text", "justification."]
L = 16
formatted_text = full_justify(words, L)
for line in formatted_text:
    print(f"'{line}'")
