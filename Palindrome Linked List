# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        if not head or not head.next:
            return True
        slow = head
        fast = head
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        
        reverse = None
        current = slow
        while current:
            next = current.next
            current.next = reverse
            reverse = current
            current = next
        first_half = head
        second_half = reverse

        while second_half:
            if first_half.val!=second_half.val:
                return False
            first_half = first_half.next
            second_half = second_half.next
        return True
