def count_ways_to_fill_grid(n):
    if n == 0:
        return 1  # There's exactly one way to fill a 4x0 grid (do nothing)

    # Initialize the DP array
    dp = [0] * (n + 1)
    dp[0] = 1  # Base case: 1 way to fill a 4x0 grid (empty)

    # For larger n, precompute the number of ways to fill the grid
    for i in range(1, n + 1):
        if i >= 2:
            dp[i] += dp[i - 2] * 3
        if i >= 4:
            dp[i] += dp[i - 4] * 11
        if i >= 6:
            dp[i] += dp[i - 6] * 5
        if i >= 8:
            dp[i] += dp[i - 8] * 3

    return dp[n]

# Example usage:
n = 4
print(count_ways_to_fill_grid(n))  # Output for n=4
