# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:
        def depth_of_tree(root: Optional[TreeNode]) -> int:
            depth = 0
            if root is None:
                return depth
            if root.left is None and root.right is None:
                return depth+1
            depth = depth+1
            depth = depth + max(depth_of_tree(root.left),depth_of_tree(root.right))
            return depth
                
        return depth_of_tree(root)
