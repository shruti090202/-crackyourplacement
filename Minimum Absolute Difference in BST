# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def getMinimumDifference(self, root: Optional[TreeNode]) -> int:
        def inorder_traversal(node: Optional[TreeNode],nodes:List[int]):
            if node is None:
                return
            inorder_traversal(node.left,nodes)
            nodes.append(node.val)
            inorder_traversal(node.right,nodes)

        if root is None:
            return 0
        nodes = []
        inorder_traversal(root,nodes)
        diff = float('inf')
        for i in range(1,len(nodes)):
            diff = min(diff,nodes[i]-nodes[i-1])
        return  diff
