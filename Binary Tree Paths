# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:
        def root_to_leaf(node: Optional[TreeNode],path: str, result:List[str]):
            if node is not None:
                path+=str(node.val)
                if node.left is None and node.right is None:
                    result.append(path)
                else:
                    path+="->"
                    root_to_leaf(node.left,path,result)
                    root_to_leaf(node.right,path,result)
        
        result = []
        root_to_leaf(root,"",result)
        return result
