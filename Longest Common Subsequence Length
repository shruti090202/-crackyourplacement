def longest_common_subsequence_length(a, b):
    m, n = len(a), len(b)
    # Create a 2D DP table initialized with 0
    dp = [[0] * (n + 1) for _ in range(m + 1)]
    
    # Fill the DP table
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if a[i - 1] == b[j - 1]:
                dp[i][j] = dp[i - 1][j - 1] + 1
            else:
                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])
    
    # The length of the longest common subsequence
    return dp[m][n]

# Example usage:
a = "abcde"
b = "ace"
print(longest_common_subsequence_length(a, b))  # Output: 3
